const { topOptions } = require("../../options");
const { donatedUsers } = require("../donate/donatedUsers");
const { formatNumberWithAbbreviations } = require("../systems/systemRu");

async function getTopPlayersBalance(msg, bot, collection) {
    const chatId = msg.message.chat.id;
    const userId = msg.from.id;
    const replyId = msg.message.message_id

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Ö –ø–æ –±–∞–ª–∞–Ω—Å—É –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è.
    const topPlayers = await collection.find().sort({ balance: -1 }).toArray();

    // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å (–ø–æ–∑–∏—Ü–∏—é) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ.
    const userIndex = topPlayers.findIndex((user) => user.id === userId);

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Ç–æ–ø 10, –Ω–∞—Ö–æ–¥–∏–º –µ–≥–æ –ø–æ–∑–∏—Ü–∏—é.
    const userPosition = userIndex === -1 ? await collection.countDocuments({ balance: { $gt: topPlayers[9].balance } }) + 1 : userIndex + 1;

    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    let message = `–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –±–∞–ª–∞–Ω—Å—É:\n\n`;

    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Ö –∏–º–µ–Ω–∞ –∏ –±–∞–ª–∞–Ω—Å—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
    topPlayers.slice(0, 10).forEach((user, index) => {
        let positionText = "";
        switch (index) {
            case 0:
                positionText = "üëë:";
                break;
            case 1:
                positionText = "üèÜ:";
                break;
            case 2:
                positionText = "ü•â:";
                break;
            default:
                positionText = `${index + 1}.`;
        }

        const name = user.userName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫";
        const balance = user.balance;

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        message += `${positionText} <a href='tg://user?id=${user.id}'>${name}</a>: ${balance > 0 ? formatNumberWithAbbreviations(balance) : balance} \n`;
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    message += `\n–í–∞—à–µ –º–µ—Å—Ç–æ: ${userPosition}. –í–∞—à –±–∞–ª–∞–Ω—Å: ${userIndex === -1 ? 0 : topPlayers[userIndex].balance > 0 ? formatNumberWithAbbreviations(topPlayers[userIndex].balance) : topPlayers[userIndex].balance} `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç.
    bot.editMessageText(message, {
        chat_id: chatId,
        message_id: replyId,
        parse_mode: 'HTML',
        ...topOptions,
    })
}

async function getTopPlayersCard(msg, bot, collection) {
    const chatId = msg.message.chat.id;
    const userId = msg.from.id;
    const replyId = msg.message.message_id

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Ö –ø–æ –±–∞–ª–∞–Ω—Å—É –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è.
    const topPlayers = await collection.find().sort({ "bankCard.0.cardValue": -1 }).toArray();

    // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å (–ø–æ–∑–∏—Ü–∏—é) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ.
    const userIndex = topPlayers.findIndex((user) => user.id === userId);

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Ç–æ–ø 10, –Ω–∞—Ö–æ–¥–∏–º –µ–≥–æ –ø–æ–∑–∏—Ü–∏—é.
    const userPosition = userIndex === -1 ? await collection.countDocuments({ "bankCard.0.cardValue": { $gt: topPlayers[9].bankCard[0].cardValue } }) + 1 : userIndex + 1;

    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    let message = `–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –±–∞–ª–∞–Ω—Å—É –Ω–∞ –∫–∞—Ä—Ç–µ:\n\n`;

    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Ö –∏–º–µ–Ω–∞ –∏ –±–∞–ª–∞–Ω—Å—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
    topPlayers.slice(0, 10).forEach((user, index) => {
        let positionText = "";
        switch (index) {
            case 0:
                positionText = "üëë:";
                break;
            case 1:
                positionText = "üèÜ:";
                break;
            case 2:
                positionText = "ü•â:";
                break;
            default:
                positionText = `${index + 1}.`;
        }

        const name = user.userName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫";
        const balance = user.bankCard[0].cardValue;

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        message += `${positionText} <a href='tg://user?id=${user.id}'>${name}</a>: ${balance > 0 ? formatNumberWithAbbreviations(balance) : balance} \n`;
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    message += `\n–í–∞—à–µ –º–µ—Å—Ç–æ: ${userPosition}. –í–∞—à –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç–µ: ${userIndex === -1 ? 0 : topPlayers[userIndex].bankCard[0].cardValue > 0 ? formatNumberWithAbbreviations(topPlayers[userIndex].bankCard[0].cardValue) : topPlayers[userIndex].bankCard[0].cardValue} `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç.
    bot.editMessageText(message, {
        chat_id: chatId,
        message_id: replyId,
        parse_mode: 'HTML',
        ...topOptions,
    })
}

async function getTopPlayersRates(msg, bot, collection) {
    const chatId = msg.message.chat.id;
    const userId = msg.from.id;
    const replyId = msg.message.message_id

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Ö –ø–æ –±–∞–ª–∞–Ω—Å—É –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è.
    const topPlayers = await collection.find().sort({ "rates.0.all": -1 }).toArray();

    // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å (–ø–æ–∑–∏—Ü–∏—é) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Ç–ø—Ä–∞–≤–∏–≤—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ.
    const userIndex = topPlayers.findIndex((user) => user.id === userId);

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Ç–æ–ø 10, –Ω–∞—Ö–æ–¥–∏–º –µ–≥–æ –ø–æ–∑–∏—Ü–∏—é.
    const userPosition = userIndex === -1 ? await collection.countDocuments({ "rates.0.all": { $gt: topPlayers[9].rates[0].all } }) + 1 : userIndex + 1;

    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    let message = `–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–≥—Ä:\n\n`;

    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Ö –∏–º–µ–Ω–∞ –∏ –±–∞–ª–∞–Ω—Å—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
    topPlayers.slice(0, 10).forEach((user, index) => {
        let positionText = "";
        switch (index) {
            case 0:
                positionText = "üëë:";
                break;
            case 1:
                positionText = "üèÜ:";
                break;
            case 2:
                positionText = "ü•â:";
                break;
            default:
                positionText = `${index + 1}.`;
        }

        const name = user.userName || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫";
        const rates = user.rates[0].all;

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        message += `${positionText} <a href='tg://user?id=${user.id}'>${name}</a>: ${rates} \n`;
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    message += `\n–í–∞—à–µ –º–µ—Å—Ç–æ: ${userPosition}. –í–∞—à–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã: ${userIndex === -1 ? 0 : topPlayers[userIndex].rates[0].all} `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç.
    bot.editMessageText(message, {
        chat_id: chatId,
        message_id: replyId,
        parse_mode: 'HTML',
        ...topOptions,
    })
}

async function topWithBtns(msg, bot, collection) {
    const data = msg.data

    if (data === 'top_balance') {
        getTopPlayersBalance(msg, bot, collection)
    }
    if(data === 'top_game'){
        getTopPlayersRates(msg, bot, collection)
    }
    if(data === 'top_card'){
        getTopPlayersCard(msg, bot, collection)
    }
}

async function tops(msg, bot, collection) {
    const text = msg.text
    const chatId = msg.chat.id

    const userStatus = await donatedUsers(msg, collection);

    if (text.toLowerCase() === '—Ç–æ–ø') {
        bot.sendMessage(chatId, `
<b>${userStatus}</b>, –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä—é —Ç–æ–ø–∞
        `, {
            parse_mode: "HTML",
            ...topOptions
        })
    }
}

module.exports = {
    tops,
    topWithBtns,
}