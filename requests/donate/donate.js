const { customChalk } = require("../../customChalk");
const { donatedUsers } = require("./donatedUsers")

async function sendMessage(msg, text, options = {}, bot) {
    const chatId = msg.message.chat.id

    await bot.editMessageText(text, {
        chat_id: chatId,
        message_id: msg.message.message_id,
        parse_mode: 'HTML',
        ...options
    });
}

async function donateMain(msg, bot, collection) {
    const userId = msg.from.id;
    const user = await collection.findOne({ id: userId });
    const userStatusName = user.status[0].statusName;
    const userDonatedStatus = await donatedUsers(msg, collection);
    const purchase = userStatusName.toLowerCase() !== 'player' ? `<b>–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å—Ç–∞—Ç—É—Å:</b> <i>${userStatusName.toUpperCase()}</i>` : '';

    const optionsDonate = {
        reply_markup: {
            inline_keyboard: [
                [{ text: 'üéÅ', callback_data: 'donate_standart' }, { text: 'üíé', callback_data: 'donate_vip' }, { text: '‚≠êÔ∏è', callback_data: 'donate_premium' }],
                [{ text: '–ù–ê–ó–ê–î', callback_data: 'donateMain_menu' }]
            ]
        }
    };

    sendMessage(msg, `
${userDonatedStatus}, –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–Ω–∞—Ç—ã
${purchase}
1 UC = 0.5 –†

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

<b>üéÅSTANDART</b> = <i>–ë–ï–°–ü–õ–ê–¢–ù–û 7 –¥–Ω–µ–π</i>
<b>üíéVIP</b> = <i>99 UC - 30 –¥–Ω–µ–π</i>
<b>‚≠êÔ∏èPREMIUM</b> = <i>300 UC - 30 –¥–Ω–µ–π</i>

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
    `, optionsDonate, bot);
}

async function buyStatus(userId, collection, statusName, days) {
    const purchaseDate = new Date();
    const expireDate = new Date(purchaseDate.getTime() + days * 24 * 60 * 60 * 1000);

    await collection.updateOne({ id: userId }, {
        $set: {
            "status.0.statusName": statusName,
            "status.0.purchaseDate": purchaseDate,
            "status.0.statusExpireDate": expireDate
        }
    });
}

async function donateMenuStatuses(msg, bot, collection) {
    const userId1 = msg.from.id
    const chatId = msg.message.chat.id
    const messageId = msg.message.message_id
    const data = msg.data

    const user = await collection.findOne({ id: userId1 })
    const userStatusName = user.status[0].statusName
    const userDonatedStatus = await donatedUsers(msg, collection)

    let optionsDonate = {
        reply_markup: {
            inline_keyboard: [
                [{ text: 'üéÅ', callback_data: 'donate_standart' }, { text: 'üíé', callback_data: 'donate_vip' }, { text: '‚≠êÔ∏è', callback_data: 'donate_premium' }],
                [{ text: '–ù–∞–∑–∞–¥', callback_data: 'donateMain_menu' }]
            ]
        }
    }
    let depOpts = {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç', switch_inline_query_current_chat: '+–¥–µ–ø –ø—Ä–æ—Ü–µ–Ω—Ç' }],
                [{ text: '–ù–∞–∑–∞–¥', callback_data: 'donateMain_menu' }]
            ]
        }
    }

    let purchase;

    if (userStatusName.toLowerCase() !== 'player') {
        purchase = `
<b>–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å—Ç–∞—Ç—É—Å:</b> <i>${userStatusName.toUpperCase()}</i>
        `
    }
    else {
        purchase = ''
    }

    const messageStatuses = `
${userDonatedStatus}, –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–Ω–∞—Ç—ã
${purchase}
1 UC = 0.5 –†

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
    
<b>üéÅSTANDART</b> = <i>–ë–ï–°–ü–õ–ê–¢–ù–û 7 –¥–Ω–µ–π</i>
<b>üíéVIP</b> = <i>99 UC - 30 –¥–Ω–µ–π</i>
<b>‚≠êÔ∏èPREMIUM</b> = <i>300 UC - 30 –¥–Ω–µ–π</i>

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
    `

    const messageDepozit = `
${userDonatedStatus}, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –≤–∞—à –¥–µ–ø–æ–∑–∏—Ç 1 –ø—Ä–æ—Ü–µ–Ω—Ç
–ö–∞–∂–¥—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å—Ç–æ–∏—Ç –ø–æ <b>50 (UC)</b>

<i>–í–∞—à –¥–æ–ø-—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –∫—É–ø–∏–≤ —Å–∞—Ç—É—Ç—Å –≤–∞—à–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞ –Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –ª–∏–º–∏—Ç—ã !</i>
<i>–ö—É–ø–∏–≤ –¥–æ–ø-—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ —Ç–∞–∫–∂–µ –≤—ã —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç–µ –ª–∏–º–∏—Ç –¥–µ–ø–æ–∑–∏—Ç–∞ –∏ —ç—Ç–æ—Ç –ª–∏–º–∏—Ç —Ç–æ–∂–µ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω</i>

<b>–ù–∞–ø—Ä–∏–º–µ—Ä –≤—ã –∫—É–ø–∏–ª–∏ —Å—Ç–∞—Ç—É—Å VIPüíé –≤–∞—à –¥–µ–ø–æ–∑–∏—Ç –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω —Å–ø–µ—Ä–≤–∞ –Ω–∞ —Å–¥–∞–Ω—Ç–∞—Ä—Ç–Ω—ã–π –ª–∏–º–∏—Ç –∏ –¥–µ–ø–æ–∑–∏—Ç –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç VIP –ø–æ—Ç–æ–º –ø—Ä–∏–±–∞–≤—è—Ç—å—Å—è –≤–∞—à–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –ª–∏–º–∏—Ç—ã !</b>
    `

    if (data === 'donate_statuses') {
        bot.editMessageText(messageStatuses, {
            chat_id: chatId,
            message_id: messageId,
            parse_mode: 'HTML',
            ...optionsDonate
        })
    }
    if(data === 'donate_depozit'){
        bot.editMessageText(messageDepozit, {
            chat_id: chatId,
            message_id: messageId,
            parse_mode: 'HTML',
            ...depOpts
        })
    }
    if (data === 'donateMain_menu') {
        let optionsDonateWithOutBack = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'ü™Ñ–°—Ç–∞—Ç—É—Å—ã', callback_data: 'donate_statuses' }, { text: '‚öôÔ∏è–î–µ–ø–æ–∑–∏—Ç', callback_data: 'donate_depozit' }],
                ]
            }
        }
        bot.editMessageText(`
${userDonatedStatus}, –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–Ω–∞—Ç—ã

1 UC = 0.5 –†

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        
ü™Ñ–°—Ç–∞—Ç—É—Å—ã
‚öôÔ∏è–î–µ–ø–æ–∑–∏—Ç

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
            `, {
            chat_id: chatId,
            message_id: messageId,
            parse_mode: 'HTML',
            ...optionsDonateWithOutBack,
        })
    }
}

let txtOfStandartStatus = `
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

‚úÖ - –ò–ú–ï–ï–¢–°–Ø
‚ùå - –ù–ï –ò–ú–ï–ï–¢–°–Ø

–û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –†–ï–ö–õ–ê–ú–´ ‚ùå
–ï–ñ–ï–î–ù–ï–í–ù–´–ô –ë–û–ù–£–° –£–í–ï–õ–ò–ß–Å–ù –ù–ê 2X ‚ùå
–í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –ü–û–°–¢–ê–í–ò–¢–¨ –°–í–û–Æ –ê–í–£ ‚ùå
–í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –ü–û–°–¢–ê–í–ò–¢–¨ –ù–ò–ö –î–û 16 –°–ò–ú–í–û–õ–û–í ‚ùå
–°–û–ö–†–ê–©–ï–ù–û –ü–û–õ–£–ß–ï–ù–ò–ï –ë–û–ù–£–°–ê 2 –†–ê–ó–ê ‚ùå
–°–ö–ò–î–ö–ê –ù–ê –õ–Æ–ë–£–Æ –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–£ 5% ‚úÖ
–°–ö–ò–î–ö–ê –ù–ê –õ–Æ–ë–´–• –ë–†–ê–ë–û–¢–ù–ò–ö–û–í 5% ‚úÖ
–û–¢–ú–ï–¢–ö–ê –í –ü–†–û–§–ò–õ–ï <b>"üéÅ"</b> ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –ü–ï–†–ï–î–ê–ß–ò –ù–ê 300.000 (300–µ3) ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –í –î–ï–ü–û–ó–ò–¢–ï –î–û 12% ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –ü–û–ü–û–õ–ù–ï–ù–ò–ï –î–û–ü–û–ó–ò–¢–ê –î–û 100.000 (100–µ3) ‚úÖ

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
`

let txtOfVipStatus = `
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

‚úÖ - –ò–ú–ï–ï–¢–°–Ø
‚ùå - –ù–ï –ò–ú–ï–ï–¢–°–Ø

–í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –ü–û–°–¢–ê–í–ò–¢–¨ –°–í–û–Æ –ê–í–£ ‚ùå
–û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –†–ï–ö–õ–ê–ú–´ ‚úÖ
–ï–ñ–ï–î–ù–ï–í–ù–´–ô –ë–û–ù–£–° –£–í–ï–õ–ò–ß–Å–ù –ù–ê 2X ‚úÖ
–°–ö–ò–î–ö–ê –ù–ê –õ–Æ–ë–£–Æ –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–£ 7% ‚úÖ
–°–ö–ò–î–ö–ê –ù–ê –õ–Æ–ë–´–• –ë–†–ê–ë–û–¢–ù–ò–ö–û–í 7% ‚úÖ
–û–¢–ú–ï–¢–ö–ê –í –ü–†–û–§–ò–õ–ï <b>"üíé"</b> ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –ü–ï–†–ï–î–ê–ß–ò –ù–ê 600.000 (600–µ3) ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –í –î–ï–ü–û–ó–ò–¢–ï –î–û 15% ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –ü–û–ü–û–õ–ù–ï–ù–ò–ï –î–û–ü–û–ó–ò–¢–ê –î–û 200.000 (200–µ3) ‚úÖ
–í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –ü–û–°–¢–ê–í–ò–¢–¨ –ù–ò–ö –î–û 16 –°–ò–ú–í–û–õ–û–í ‚úÖ
–°–û–ö–†–ê–©–ï–ù–û –ü–û–õ–£–ß–ï–ù–ò–ï –ë–û–ù–£–°–ê 2 –†–ê–ó–ê ‚úÖ

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
`

let txtOfPremiumStatus = `
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

‚úÖ - –ò–ú–ï–ï–¢–°–Ø
‚ùå - –ù–ï –ò–ú–ï–ï–¢–°–Ø

–í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –ü–û–°–¢–ê–í–ò–¢–¨ –°–í–û–Æ –ê–í–£ ‚úÖ
–û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –†–ï–ö–õ–ê–ú–´ ‚úÖ
–ï–ñ–ï–î–ù–ï–í–ù–´–ô –ë–û–ù–£–° –£–í–ï–õ–ò–ß–Å–ù –ù–ê 2X ‚úÖ
–°–ö–ò–î–ö–ê –ù–ê –õ–Æ–ë–£–Æ –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–£ 10% ‚úÖ
–°–ö–ò–î–ö–ê –ù–ê –õ–Æ–ë–´–• –ë–†–ê–ë–û–¢–ù–ò–ö–û–í 10% ‚úÖ
–û–¢–ú–ï–¢–ö–ê –í –ü–†–û–§–ò–õ–ï <b>"‚≠êÔ∏è"</b> ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –ü–ï–†–ï–î–ê–ß–ò –ù–ê 1.000.000 (1–µ16) ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –í –î–ï–ü–û–ó–ò–¢–ï –î–û 18% ‚úÖ
–£–í–ï–õ–ò–ß–Å–ù –õ–ò–ú–ò–¢ –ü–û–ü–û–õ–ù–ï–ù–ò–ï –î–û–ü–û–ó–ò–¢–ê –î–û 400.000 (400–µ3) ‚úÖ
–í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –ü–û–°–¢–ê–í–ò–¢–¨ –ù–ò–ö –î–û 16 –°–ò–ú–í–û–õ–û–í ‚úÖ
–°–û–ö–†–ê–©–ï–ù–û –ü–û–õ–£–ß–ï–ù–ò–ï –ë–û–ù–£–°–ê 2 –†–ê–ó–ê ‚úÖ

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
`

async function donateMenu(msg, bot, collection) {
    const text = msg.text
    const chatId = msg.chat.id
    const userId1 = msg.from.id
    const messageId = msg.message_id
    const userDonatedStatus = await donatedUsers(msg, collection)

    let optionsDonate = {
        reply_markup: {
            inline_keyboard: [
                [{ text: 'ü™Ñ–°—Ç–∞—Ç—É—Å—ã', callback_data: 'donate_statuses' }, { text: '‚öôÔ∏è–î–µ–ø–æ–∑–∏—Ç', callback_data: 'donate_depozit' }],
            ]
        }
    }

    let goBot = {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–û—Ç–∫—Ä—ã—Ç—å –ª—Å', url: 'https://t.me/levouJS_bot' }],
            ]
        }
    }
    if (chatId === userId1) {

        await bot.sendMessage(chatId, `
${userDonatedStatus}, –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–Ω–∞—Ç—ã

1 UC = 0.5 –†

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        
ü™Ñ–°—Ç–∞—Ç—É—Å—ã
‚öôÔ∏è–î–µ–ø–æ–∑–∏—Ç

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
            `, { parse_mode: 'HTML', reply_to_message_id: messageId, ...optionsDonate })
    }
    else {
        //             // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –õ–° —Å –±–æ—Ç–æ–º
        //             const chat = await bot.getChat(userId1);
        //             if (!!chat.photo) {
        //                 bot.sendMessage(chatId, `
        // ${userDonatedStatus}, –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –¥–æ–Ω–∞—Ç –º–µ–Ω—é –≤ –ª—Å
        //                     `, { parse_mode: 'HTML', reply_to_message_id: messageId, ...goBot })

        //                 bot.sendMessage(userId1, `
        // ${userDonatedStatus}, –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–Ω–∞—Ç—ã

        // 1 UC = 0.5 –†

        // ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

        // –°–¢–ê–¢–£–°–´
        // –î–û–ù–ê–¢ –ú–ê–®–ò–ù–´
        // –î–û–ù–ê–¢ –î–û–ú–ê

        // ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        //                     `, { parse_mode: 'HTML', ...optionsDonate })
        //                 return;
        //             }
        //             else {
        //                 bot.sendMessage(chatId, `
        // ${userDonatedStatus}, –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞ –Ω–µ –∏–º–µ–≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç —Å –±–æ—Ç–æ–º –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –¥–æ–Ω–∞—Ç—ã
        //                 `, { parse_mode: 'HTML', reply_to_message_id: messageId, ...goBot })
        //             }
        try {
            await bot.sendMessage(chatId, `
${userDonatedStatus}, –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –¥–æ–Ω–∞—Ç –º–µ–Ω—é –≤ –ª—Å
                `, { parse_mode: 'HTML', reply_to_message_id: messageId, ...goBot })

            await bot.sendMessage(userId1, `
${userDonatedStatus}, –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–Ω–∞—Ç—ã

1 UC = 0.5 –†

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

ü™Ñ–°—Ç–∞—Ç—É—Å—ã
‚öôÔ∏è–î–µ–ø–æ–∑–∏—Ç

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
                `, { parse_mode: 'HTML', ...optionsDonate })
        } catch (err) {
            if (err.response && err.response.statusCode === 403) {
                bot.sendMessage(chatId, `
${userDonatedStatus}, —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –º–µ–Ω—è —á—Ç–æ–±—ã —è —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ
                `, { parse_mode: 'HTML', reply_to_message_id: messageId, ...goBot })
            } else if (err.response && err.response.statusCode === 400) {
                bot.sendMessage(chatId, `
${userDonatedStatus}, —É –≤–∞—Å –µ—â–µ –Ω–µ—Ç—É —á–∞—Ç–∞ —Å–æ –º–Ω–æ–π –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª—Å –∏ –Ω–∞–∂–º–∏—Ç–µ —Å—Ç–∞—Ä—Ç
                `, { parse_mode: 'HTML', reply_to_message_id: messageId, ...goBot })
            } else {
                console.log(customChalk.colorize(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–∞: ${err.message}`, { style: 'italic', background: 'bgRed' }));
            }
        }
    }
}

async function donateBtns(msg, bot, collection) {
    const chatId = msg.message.chat.id
    const userId1 = msg.from.id
    const data = msg.data
    const messageId = msg.message.message_id

    const user = await collection.findOne({ id: userId1 })

    const userId = user.id
    const userStatusName = user.status[0].statusName
    const userStatusExpireDate = user.status[0].statusExpireDate

    const userDonatedStatus = await donatedUsers(msg, collection)

    if (data === 'donate_standart') {
        let optionsStandart = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ üéÅ', callback_data: 'active_donate_standart' }],
                    [{ text: '–ù–∞–∑–∞–¥', callback_data: 'donate_main' }],
                ]
            }
        }

        bot.editMessageText(`
${userDonatedStatus}, –í–æ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ –¥–æ–Ω–∞—Ç —Å—Ç–∞—Ç—É—Å <b>STANDART üéÅ</b>
${txtOfStandartStatus}
        `, {
            chat_id: chatId,
            message_id: messageId,
            ...optionsStandart,
            parse_mode: 'HTML',
        })
    }
    if (data === 'donate_vip') {
        let optionsVip = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ üíé', callback_data: 'active_donate_vip' }],
                    [{ text: '–ù–∞–∑–∞–¥', callback_data: 'donate_main' }],
                ]
            }
        }

        bot.editMessageText(`
${userDonatedStatus}, –í–æ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ –¥–æ–Ω–∞—Ç —Å—Ç–∞—Ç—É—Å <b>VIP üíé</b>
${txtOfVipStatus}
        `, {
            chat_id: chatId,
            message_id: messageId,
            ...optionsVip,
            parse_mode: 'HTML',
        })
    }
    if (data === 'donate_premium') {
        let optionsVip = {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ ‚≠êÔ∏è', callback_data: 'active_donate_premium' }],
                    [{ text: '–ù–∞–∑–∞–¥', callback_data: 'donate_main' }],
                ]
            }
        }

        bot.editMessageText(`
${userDonatedStatus}, –í–æ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ –¥–æ–Ω–∞—Ç —Å—Ç–∞—Ç—É—Å <b>PREMIUM ‚≠êÔ∏è</b>
${txtOfPremiumStatus}
        `, {
            chat_id: chatId,
            message_id: messageId,
            ...optionsVip,
            parse_mode: 'HTML',
        })
    }
    if (data === 'donate_main') {
        donateMain(msg, bot, collection)
    }

    let optionsDonateMain = {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–ù–∞–∑–∞–¥', callback_data: 'donate_main' }],
            ]
        }
    }

    const dataMap = {
        'active_donate_standart': { statusName: 'standart', days: 7, cost: 0, moneyLimit: 300000, depLimit: 100000, depProcent: 12 },
        'active_donate_vip': { statusName: 'vip', days: 30, cost: 99, moneyLimit: 600000, depLimit: 200000, depProcent: 15 },
        'active_donate_premium': { statusName: 'premium', days: 30, cost: 300, moneyLimit: 1000000, depLimit: 400000, depProcent: 18 }
    };

    if (data in dataMap) {
        const { statusName, days, cost, moneyLimit, depLimit, depProcent } = dataMap[data];
        const remainingTime = userStatusExpireDate - new Date();
        const remainingDays = Math.ceil(remainingTime / (24 * 60 * 60 * 1000));
        const remainingHours = Math.floor((remainingTime % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));
        const remainingMinutes = Math.floor((remainingTime % (60 * 60 * 1000)) / (60 * 1000));

        let userStatusSticker;

        if (userStatusName === 'standart') {
            userStatusSticker = 'üéÅ';
        } else if (userStatusName === 'vip') {
            userStatusSticker = 'üíé';
        } else if (userStatusName === 'premium') {
            userStatusSticker = '‚≠êÔ∏è';
        } else {
            userStatusSticker = '';
        }

        if (userStatusName === 'premium') {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å "premium"
            bot.editMessageText(`
${userDonatedStatus}, –í—ã —É–∂–µ –∏–º–µ–µ—Ç–µ —Å—Ç–∞—Ç—É—Å <b>${userStatusName.toUpperCase()} ${userStatusSticker}</b>.
<b>–ü–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ:</b> <i>${userStatusExpireDate.toLocaleString()}</i>

<b>–ï—â–µ ${remainingDays} –¥–Ω–µ–π, ${remainingHours} —á–∞—Å–æ–≤, ${remainingMinutes} –º–∏–Ω—É—Ç</b>, –ø—Ä–µ–∂–¥–µ —á–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∞—Ç—É—Å.
            `, {
                chat_id: chatId,
                message_id: messageId,
                parse_mode: 'HTML',
                ...optionsDonateMain,
            });
        } else if (userStatusName === statusName) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Å—Ç–∞—Ç—É—Å
            // (–Ω–æ —ç—Ç–æ –Ω–µ "premium")
            bot.editMessageText(`
${userDonatedStatus}, –í—ã —É–∂–µ –∫—É–ø–∏–ª–∏ —Å—Ç–∞—Ç—É—Å <b>${statusName.toUpperCase()} ${userStatusSticker}</b>.
<b>–ü–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ:</b> <i>${userStatusExpireDate.toLocaleString()}</i>

<b>–ï—â–µ ${remainingDays} –¥–Ω–µ–π, ${remainingHours} —á–∞—Å–æ–≤, ${remainingMinutes} –º–∏–Ω—É—Ç</b>, –ø—Ä–µ–∂–¥–µ —á–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∞—Ç—É—Å.
            `, {
                chat_id: chatId,
                message_id: messageId,
                parse_mode: 'HTML',
                ...optionsDonateMain,
            });
        } else if (userStatusName === 'vip' && statusName !== 'premium') {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å "vip", –Ω–æ –Ω–µ "premium"
            bot.editMessageText(`
${userDonatedStatus}, –í—ã —É–∂–µ –∫—É–ø–∏–ª–∏ —Å—Ç–∞—Ç—É—Å <b>${statusName.toUpperCase()} ${userStatusSticker}</b>.
<b>–ü–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ:</b> <i>${userStatusExpireDate.toLocaleString()}</i>

<b>–ï—â–µ ${remainingDays} –¥–Ω–µ–π, ${remainingHours} —á–∞—Å–æ–≤, ${remainingMinutes} –º–∏–Ω—É—Ç</b>, –ø—Ä–µ–∂–¥–µ —á–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∞—Ç—É—Å.
            `, {
                chat_id: chatId,
                message_id: messageId,
                parse_mode: 'HTML',
                ...optionsDonateMain,
            });
        } else if (userStatusName === 'standart' && statusName === 'standart') {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å "standart" –∏ —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å "standart"
            bot.editMessageText(`
${userDonatedStatus}, –í—ã —É–∂–µ –∫—É–ø–∏–ª–∏ —Å—Ç–∞—Ç—É—Å <b>${statusName.toUpperCase()} ${userStatusSticker}</b>.
<b>–ü–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ:</b> <i>${userStatusExpireDate.toLocaleString()}</i>

<b>–ï—â–µ ${remainingDays} –¥–Ω–µ–π, ${remainingHours} —á–∞—Å–æ–≤, ${remainingMinutes} –º–∏–Ω—É—Ç</b>, –ø—Ä–µ–∂–¥–µ —á–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –¥—Ä—É–≥–æ–π —Å—Ç–∞—Ç—É—Å.
            `, {
                chat_id: chatId,
                message_id: messageId,
                parse_mode: 'HTML',
                ...optionsDonateMain,
            });
        } else {
            const enoughUC = user.uc >= cost;
            if (enoughUC) {
                const userExtraDepLimit = parseInt(user.depozit[0].extraLimit) + parseInt(depLimit)
                const userExtraDepProcent = parseInt(user.depozit[0].extraProcent) + parseInt(depProcent)

                await buyStatus(userId, collection, statusName, days);
                await collection.updateOne({ id: userId }, { $inc: { uc: -cost } });
                await collection.updateOne({ id: userId }, { $set: { "limit.0.giveMoneyLimit": moneyLimit, "depozit.0.limit": userExtraDepLimit, "depozit.0.procent": userExtraDepProcent, "depozit.0.extraLimit": 0, "depozit.0.extraProcent": 0 } })

                let activeStatusSticker;
                if (statusName === 'premium') {
                    activeStatusSticker = '‚≠êÔ∏è';
                }
                else if (statusName === 'vip') {
                    activeStatusSticker = 'üíé';
                }
                else if (statusName === 'standart') {
                    activeStatusSticker = 'üéÅ';
                }
                else {
                    activeStatusSticker = '';
                }

                bot.editMessageText(`
${userDonatedStatus},
–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Å—Ç–∞—Ç—É—Å <b>${statusName.toUpperCase()} ${activeStatusSticker}</b>.

<b>–°–ø–∞—Å–∏–±–æ –≤–∞–º –æ–≥—Ä–æ–º–Ω–æ–µ —á—Ç–æ –ø–æ–∫—É–ø–∞–ª–∏ –Ω–∞—à —Ç–æ–≤–∞—Ä</b>
                `, {
                    chat_id: chatId,
                    message_id: messageId,
                    parse_mode: 'HTML',
                })
            } else {
                bot.editMessageText(`
${userDonatedStatus}, –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ UC –¥–ª—è –ø–æ–∫—É–ø–∫–∏ 
–°—Ç–∞—Ç—É—Å–∞ <b>${statusName.toUpperCase()} ${userStatusSticker}</b>.
                    `, {
                    chat_id: chatId,
                    message_id: messageId,
                    parse_mode: 'HTML',
                    ...optionsDonateMain,
                })
            }
        }
    }
}

async function donateInfo(msg, bot, collection) {
    const chatId = msg.chat.id
    const userId1 = msg.from.id
    const messageId = msg.message_id

    const user = await collection.findOne({ id: userId1 })

    const userStatusName = user.status[0].statusName
    const userStatusExpireDate = user.status[0].statusExpireDate
    const purchaseDate = user.status[0].purchaseDate

    const remainingTime = userStatusExpireDate - new Date();
    const remainingDays = Math.ceil(remainingTime / (24 * 60 * 60 * 1000));
    const remainingHours = Math.floor((remainingTime % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));
    const remainingMinutes = Math.floor((remainingTime % (60 * 60 * 1000)) / (60 * 1000));

    let userStatus;

    let userStatusSticker;

    if (userStatusName === 'standart') {
        userStatusSticker = 'üéÅ';
    } else if (userStatusName === 'vip') {
        userStatusSticker = 'üíé';
    } else if (userStatusName === 'premium') {
        userStatusSticker = '‚≠êÔ∏è';
    } else {
        userStatusSticker = '';
    }

    if (userStatusName === 'standart') {
        userStatus = `
${txtOfStandartStatus}

<b>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</b> ${remainingDays} –¥–Ω–µ–π, ${remainingHours} —á–∞—Å–æ–≤, ${remainingMinutes} –º–∏–Ω—É—Ç
<b>–ë—ã–ª —Å–æ–≤–µ—Ä—à–µ–Ω –≤:</b> ${purchaseDate.toLocaleString()}
        `
    }
    else if (userStatusName === 'vip') {
        userStatus = `
${txtOfVipStatus}

<b>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</b> ${remainingDays} –¥–Ω–µ–π, ${remainingHours} —á–∞—Å–æ–≤, ${remainingMinutes} –º–∏–Ω—É—Ç
<b>–ë—ã–ª —Å–æ–≤–µ—Ä—à–µ–Ω –≤:</b> ${purchaseDate.toLocaleString()}
        `
    }
    else if (userStatusName === 'premium') {
        userStatus = `
${txtOfPremiumStatus}

<b>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:</b> ${remainingDays} –¥–Ω–µ–π, ${remainingHours} —á–∞—Å–æ–≤, ${remainingMinutes} –º–∏–Ω—É—Ç
<b>–ë—ã–ª —Å–æ–≤–µ—Ä—à–µ–Ω –≤:</b> ${purchaseDate.toLocaleString()}
        `
    }
    else {
        userStatus = `–£ –≤–∞—Å –Ω–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –¥–æ–Ω–∞—Ç —Å—Ç–∞—Ç—É—Å`
    }

    const userDonateStatues = await donatedUsers(msg, collection)
    bot.sendMessage(chatId, `
${userDonateStatues}, –í–æ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤–∞—à —Å—Ç–∞—Ç—É—Å

<b>–°—Ç–∞—Ç—É—Å:</b> ${userStatusName.toUpperCase()} ${userStatusSticker}
${userStatus}
    `, { parse_mode: 'HTML', reply_to_message_id: messageId, })
}

async function buyDiffDepozit(msg, bot, collection) {
    const userId1 = msg.from.id
    const chatId = msg.chat.id
    const messageId = msg.message_id

    const user = await collection.findOne({ id: userId1 })
    const userDepLimit = user.depozit[0].limit
    const userUc = user.uc
    const userDonateStatus = await donatedUsers(msg, collection)

    if (userUc < 50) {
        bot.sendMessage(chatId, `
${userDonateStatus}, —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–æ–Ω–∞—Ç –≤–∞–ª—é—Ç—ã <b>(UC)</b>
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç
        `, {
            parse_mode: 'HTML',
            reply_to_message_id: messageId,
        })
        return;
    }

    const addToExtraLimit = Math.floor((userDepLimit / 20) + userDepLimit)
    bot.sendMessage(chatId, `
${userDonateStatus}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π
<i>1 –ü—Ä–æ—Ü–µ–Ω—Ç –¥–ª—è —Å–≤–æ–µ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞</i>

<i>+–í–∞—à –ª–∏–º–∏—Ç –¥–µ–ø–æ–∑–∏—Ç–∞ —É–≤–µ–ª–∏—á–µ–Ω !</i> 
  <b>–ë—ã–ª–æ: ${userDepLimit.toLocaleString('de-DE')}</b>
  <b>–°—Ç–∞–ª–æ: ${addToExtraLimit.toLocaleString('de-DE')}</b>

<b>‚ùóÔ∏è–ï—Å–ª–∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å —Å—Ç–∞—Ç—É—Å—ã —Ç–æ –≤–∞—à –¥–µ–ø–æ–∑–∏—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ –Ω–æ–≤–æ–º—É –¥–µ–ø–æ–∑–∏—Ç—É –≤–∞—à–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –∏ –ª–∏–º–∏—Ç</b>
    `, {
        parse_mode: 'HTML',
        reply_to_message_id: messageId,
    })
    await collection.updateOne({ id: userId1 }, { $inc: { uc: -50, "depozit.0.procent": 1, "depozit.0.extraProcent": 1, "depozit.0.limit": Math.floor(addToExtraLimit - userDepLimit), "depozit.0.extraLimit": Math.floor(addToExtraLimit - userDepLimit) } })
}

module.exports = {
    donateMenu,
    donateBtns,
    donateInfo,
    donateMenuStatuses,
    buyDiffDepozit,
}